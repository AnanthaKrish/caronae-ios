fastlane_version "1.80.0"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."    
    ensure_git_status_clean
  end

  desc "Build and sign the app"
  private_lane :build_app do |options|
    increment_build_number
    gym
  end

  desc "Runs all the tests"
  lane :test do
    snapshot
  end

  desc "Commit the version/build number bump"
  lane :commit_build_bump do
    version_number = get_version_number
    build_number = get_build_number

    commit_version_bump(
      message: "ðŸ”– Version bump to #{version_number} (#{build_number})"
    )
  end

  desc "Add tag with the current version and build number"
  lane :tag do |options|
    version_number = get_version_number
    build_number = get_build_number

    if options[:type] == "beta"
      tag = "beta/#{version_number}/#{build_number}"
    elsif options[:type] == "appstore"
      tag = "appstore/#{version_number}/#{build_number}"
    else
      UI.user_error!("Missing option 'type' as 'beta' or 'appstore'")
    end

    add_git_tag(tag: tag)

    if options[:push]
      push_to_git_remote
    end

    UI.success("Success! New tag: '#{tag}' ðŸ”–")
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    sigh

    build_app

    pilot(
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )

    # Make sure our directory is clean, except for changes Fastlane has made
    clean_build_artifacts

    commit_build_bump(push: true)
    tag(type: "beta")
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    # snapshot
    sigh
    
    build_app

    deliver(submit_for_review: true)

    # Make sure our directory is clean, except for changes Fastlane has made
    clean_build_artifacts

    version_number = get_version_number
    build_number = get_build_number

    commit_build_bump(push: true)
  end

  desc "Sync all certificates and provisioning profiles"
  lane :match_everything do
    match(type: "development", force_for_new_devices: true)
    match(type: "appstore")
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
    reset_git_repo
  end
end
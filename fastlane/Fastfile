default_platform :ios

platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Submit a new build to TestFlight"
  lane :beta do
    ensure_git_status_clean
    install_signing

    cocoapods
    increment_build_number
    build_app

    pilot(
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )

    clean_build_artifacts

    commit_build_bump
    tag(type: "beta")
    push_to_git_remote
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    ensure_git_status_clean
    install_signing
    
    cocoapods
    increment_build_number
    build_app

    deliver(submit_for_review: true)

    clean_build_artifacts

    commit_build_bump
    tag(type: "appstore")
    push_to_git_remote
  end

  desc "Update and install all certificates and provisioning profiles"
  lane :update_signing do
    register_devices(devices_file: "./fastlane/devices.txt")
    match(type: "development", force_for_new_devices: true)
    match(type: "appstore")
  end

  desc "Install all certificates and provisioning profiles"
  lane :install_signing do
    match(type: "development", readonly: true)
    match(type: "appstore", readonly: true)
  end

  desc "Encrypt sensitive keys using AWS KMS"
  lane :encrypt_keys do
    system "aws kms encrypt --key-id alias/caronae-ios-keys --plaintext fileb://../Caronae/Supporting\\ Files/GoogleService-Info.plist --output text --query CiphertextBlob > ../Caronae/Supporting\\ Files/GoogleService-Info.plist.encrypted"
    UI.user_error! "Could not encrypt files" unless $?.exitstatus == 0
  end

  desc "Decrypt sensitive keys using AWS KMS"
  lane :decrypt_keys do
    system "cat ../Caronae/Supporting\\ Files/GoogleService-Info.plist.encrypted | base64 -di > /tmp/GoogleService-Info.plist"
    UI.user_error! "Could not decode base64 file" unless $?.exitstatus == 0
    system "aws kms decrypt --ciphertext-blob fileb:///tmp/GoogleService-Info.plist --output text --query Plaintext | base64 --decode > ../Caronae/Supporting\\ Files/GoogleService-Info.plist"
    UI.user_error! "Could not decrypt files" unless $?.exitstatus == 0
  end

  desc "Commit the version/build number bump"
  lane :commit_build_bump do
    version_number = get_version_number
    build_number = get_build_number

    commit_version_bump(
      message: "Version bump to #{version_number} (#{build_number}) [ci skip]"
    )
  end

  desc "Add tag with the current version and build number"
  lane :tag do |options|
    version_number = get_version_number
    build_number = get_build_number

    if options[:type] == "beta"
      tag = "beta/#{version_number}/#{build_number}"
    elsif options[:type] == "appstore"
      tag = "appstore/#{version_number}/#{build_number}"
    else
      UI.user_error!("Missing option 'type' as 'beta' or 'appstore'")
    end

    add_git_tag(tag: tag)

    UI.success("Success! New tag: '#{tag}' ðŸ”–")
  end

  error do |lane, exception|
    reset_git_repo
  end

end
